apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: salon-booking-ingress
  labels:
    app: salon-booking
  annotations:
    # Cert-manager para TLS automático
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    
    # Redirecionamento HTTP → HTTPS
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # Configurações de performance
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # CORS (se necessário)
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # Rewrite target (se necessário)
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  # IngressClass (método novo, substitui annotation)
  ingressClassName: nginx
  # Configuração TLS com cert-manager
  tls:
  - hosts:
    - salon-booking.mafinfo.com.br  # ⚠️ ALTERE para seu domínio
    secretName: salon-booking-tls-secret
  
  # Regras de roteamento
  rules:
  - host: salon-booking.mafinfo.com.br  # ⚠️ ALTERE para seu domínio
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: salon-booking-service
            port:
              number: 80
